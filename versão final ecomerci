CREATE TABLE funcionario
	(
	id SERIAL PRIMARY KEY,
	nome VARCHAR(250) NOT NULL,
	cpf VARCHAR(11) NOT NULL UNIQUE,
	criado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	atualizado_em TIMESTAMP,
	ativo BOOLEAN DEFAULT TRUE
	);
CREATE TABLE cliente 
	(
	id SERIAL PRIMARY KEY,
	nome VARCHAR(250) NOT NULL,
	cpf VARCHAR(11)NOT NULL UNIQUE,
	telefone VARCHAR(9)NOT NULL,
	email VARCHAR(100)NOT NULL UNIQUE,
	nome_usuario VARCHAR(50)NOT NULL UNIQUE,
	senha VARCHAR(40) NOT NULL,
	data_nascimento DATE NOT NULL,
	criado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	atualizado_em TIMESTAMP,
	ativo BOOLEAN DEFAULT TRUE
	);
CREATE TABLE endereco
	(
	id SERIAL PRIMARY KEY,
	cep VARCHAR(8) NOT NULL,
	estado VARCHAR(50) NOT NULL,
	cidade VARCHAR(50) NOT NULL,
	rua VARCHAR(50) NOT NULL,
	numero INTEGER NOT NULL,
	complemento VARCHAR(250),
	criado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	atualizado_em TIMESTAMP,
	ativo BOOLEAN DEFAULT TRUE, 
	id_cliente INTEGER REFERENCES cliente(id)  NOT NULL
	);
CREATE TABLE categoria
	(
	id SERIAL PRIMARY KEY,
	nome VARCHAR (100) NOT NULL ,
	descricao TEXT NOT NULL,
	criado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	atualizado_em TIMESTAMP,
	ativo BOOLEAN DEFAULT TRUE,
	id_funcionario INTEGER REFERENCES funcionario(id) NOT NULL
	);
 	CREATE TABLE produto
	(
	id SERIAL PRIMARY KEY,
	nome VARCHAR(50) NOT NULL,
	descricao VARCHAR (150) NOT NULL,
	data_fabricacao DATE NOT NULL,
	quantidade INTEGER NOT NULL DEFAULT 0,
	valor_unitario FLOAT NOT NULL,
	criado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	atualizado_em TIMESTAMP,
	ativo BOOLEAN DEFAULT TRUE,
	id_funcionario INTEGER REFERENCES funcionario(id) NOT NULL,
	id_categoria INTEGER REFERENCES categoria(id) NOT NULL
	);
CREATE TABLE pedido 
	(
	id SERIAL PRIMARY KEY,
	data_pedido TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	atualizado_em TIMESTAMP,
	ativo BOOLEAN DEFAULT TRUE,
	id_cliente INTEGER REFERENCES cliente(id) NOT NULL
	);

CREATE TABLE pedido_item
	(
	id SERIAL PRIMARY KEY,
	quantidade INTEGER,
	valor_unitario FLOAT,
	id_produto INTEGER REFERENCES produto(id) NOT NULL,
	id_pedido INTEGER REFERENCES pedido(id) NOT NULL
	);

insert into cliente (nome,telefone,email,nome_usuario,senha,cpf, data_nascimento)
values('jose','249924272','jjjj','jose','senha','23456789','2021-01-12');

insert into cliente (nome,telefone,email,nome_usuario,senha,cpf, data_nascimento)
values('joao','249925272','jjkj','joao','senha','1346789','2021-01-12');

insert into cliente (nome,telefone,email,nome_usuario,senha,cpf, data_nascimento)
values('ana clara','14923272','pjjj','ana','senha','12396789','2021-01-12');

insert into cliente (nome,telefone,email,nome_usuario,senha,cpf, data_nascimento)
values('bruna','24994427','bjjj','bruna','senha','12346089','2021-01-12');

insert into cliente (nome,telefone,email,nome_usuario,senha,cpf, data_nascimento)
values('antonio','24992672','jjaj','antonio','senha','18456789','2021-01-12');

insert into endereco (cep, estado,cidade,rua,id_cliente, numero) 
values ('2572065','RJ','Petropolis', 'Vigario correa',1,1);

insert into endereco (cep, estado,cidade,rua,id_cliente, numero) 
values ('2572065','RJ','Petropolis', 'Vigario correa',2,4);

insert into endereco (cep, estado,cidade,rua,id_cliente, numero) 
values ('2572065','RJ','Petropolis', 'correas',3,6);

insert into endereco (cep, estado,cidade,rua,id_cliente, numero) 
values ('2572065','RJ','Petropolis', 'correas',4,7);

insert into endereco (cep, estado,cidade,rua,id_cliente, numero) 
values ('2572065','RJ','Petropolis', 'correas',5,10);

insert into funcionario(nome,cpf) values ('joao','4562');

insert into funcionario(nome,cpf) values ('carlos','4543');

insert into funcionario(nome,cpf) values ('romulo','4593');

insert into funcionario(nome,cpf) values ('beatriz','4763');

insert into funcionario(nome,cpf) values ('Gabriel','4723');

insert into categoria (nome, descricao,id_funcionario)
values ('Não pereciveis','Não estraga','1');
	
insert into categoria (nome, descricao,id_funcionario)
values('legumes', 'produtos saudaveis ',2);

insert into categoria (nome, descricao,id_funcionario)
values ('limpeza','limpa mesmo','1');
	
insert into categoria (nome, descricao,id_funcionario)
values('faca', 'isso mata ',3);

insert into categoria (nome, descricao,id_funcionario)
values ('roupa','Não te deixa pelado',2);
	

insert into produto(nome, descricao, data_fabricacao,id_funcionario,valor_unitario, quantidade,id_categoria)
values('arroz','tipo1', '2021-09-23', 1,5.00,100,1);

insert into produto(nome, descricao, data_fabricacao,id_funcionario,valor_unitario, quantidade,id_categoria)
values('feijão','tipo1 ', '2021-09-23', 1,6.00,100,1);

insert into produto(nome, descricao, data_fabricacao,id_funcionario,valor_unitario, quantidade,id_categoria)
values('batata','batata comum ', '2021-09-23', 1,7.00,100,2);

insert into produto(nome, descricao, data_fabricacao,id_funcionario,valor_unitario, quantidade,id_categoria)
values('cenoura','cenoura comum ', '2021-09-23', 1,7.50,100,2);

insert into produto(nome, descricao, data_fabricacao,id_funcionario,valor_unitario, quantidade,id_categoria)
values('alface','alface comum ', '2021-09-23', 1,3.00,100,2);

insert into produto(nome, descricao, data_fabricacao,id_funcionario,valor_unitario, quantidade,id_categoria)
values('abobora','abóbora comum ', '2021-09-23', 1,4.00,100,2);


insert into pedido(data_pedido, id_cliente)
values('01-02-2024', 2);

insert into pedido(data_pedido, id_cliente)
values('01-02-2024', 3);
insert into pedido(data_pedido, id_cliente)
values('01-02-2024', 3);

insert into pedido(data_pedido, id_cliente)
values('01-02-2024', 4);
insert into pedido(data_pedido, id_cliente)
values('01-02-2024', 4);
insert into pedido(data_pedido, id_cliente)
values('01-02-2024', 4);


insert into pedido_item (id_produto,id_pedido, quantidade,valor_unitario)
values (1,2,2,5.00);

insert into pedido_item (id_produto,id_pedido, quantidade,valor_unitario)
values (2,2,3,6.00);

insert into pedido_item (id_produto,id_pedido, quantidade,valor_unitario)
values (3,2,4,7.00);

insert into pedido_item (id_produto,id_pedido, quantidade,valor_unitario)
values (1,3,1,5.0);

insert into pedido_item (id_produto,id_pedido, quantidade,valor_unitario)
values (2,3,2,6.00);

insert into pedido_item (id_produto,id_pedido, quantidade,valor_unitario)
values (3,3,3,7.00);


insert into pedido_item (id_produto,id_pedido, quantidade,valor_unitario)
values (1,4,5,5.00);

insert into pedido_item (id_produto,id_pedido, quantidade,valor_unitario)
values (2,4,5,6.00);

insert into pedido_item (id_produto,id_pedido, quantidade,valor_unitario)
values (3,4,4,7.00);

--insert de produtos tirando da tab produto

insert into pedido_item (id_produto,id_pedido,quantidade,valor_unitario)
values(2,2,5,6.00)

update produto 
set quantidade = quantidade - 5
WHERE 
produto.id = 2

-- comando para excluir um pedido

DELETE FROM pedido
WHERE id = 1


-- função para verificar a quantidade de vezes que um item foi pedido
SELECT p.id AS id_pedido, pr.nome AS nome_produto, pi.quantidade, pi.valor_unitario
FROM pedido p
JOIN pedido_item pi ON p.id = pi.id_pedido
JOIN produto pr ON pi.id_produto = pr.id;

-- função para somar a quantidade de produtos vendidos e organizar pelo nome
SELECT prod.nome AS nome,
	SUM(pi.valor_unitario) AS "Valor total"
FROM pedido p
	 JOIN pedido_item pi ON p.id = pi.id_pedido
	 JOIN produto prod ON pi.id_produto = prod.id
GROUP BY
	nome
ORDER BY 
    nome asc

-- nota fiscal em ordem crescente

SELECT c.nome AS nome,c.cpf AS cpf,p.id AS numero_do_pedido,p.data_pedido,
       SUM(pi.valor_unitario*pi.quantidade) AS "Valor total"
FROM pedido p
JOIN cliente c ON c.id = p.id_cliente
JOIN pedido_item pi ON p.id = pi.id_pedido
JOIN produto prod ON pi.id_produto = prod.id
GROUP BY 
	c.nome,
	c.cpf,
	p.id,
	p.data_pedido
ORDER BY 
	c.nome ASC
	
-- Quantidade de pedidos por clientes ordenado do maior para o menor

SELECT c.nome AS nome,
COUNT(p.id) AS "Numero de pedidos"
FROM pedido p
JOIN cliente c ON c.id = p.id_cliente
GROUP BY
c.nome
ORDER BY 
COUNT(p.id) asc

--Verificar a quantidade de produtos por categoria

SELECT p.nome AS nome, c.nome,p.quantidade,p.valor_unitario
FROM produto p 
JOIN categoria c ON c.id = p.id_categoria
WHERE c.nome = 'Não pereciveis'

-- quantidade de produtos por item

SELECT p.id, prod.nome,
	SUM (pi.quantidade) AS quantidade
FROM pedido p 
JOIN pedido_item pi ON p.id =pi.id_pedido
JOIN produto prod ON pi.id_produto = prod.id
WHERE
	p.id =2
GROUP BY 
	p.id,
	prod.nome
ORDER BY 
	quantidade DESC




